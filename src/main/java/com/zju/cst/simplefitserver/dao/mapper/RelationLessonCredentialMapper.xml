<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zju.cst.simplefitserver.dao.mapper.RelationLessonCredentialMapper" >
  <resultMap id="BaseResultMap" type="com.zju.cst.simplefitserver.model.RelationLessonCredential" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="lesson_id" property="lessonId" jdbcType="INTEGER" />
    <result column="credential_id" property="credentialId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
    <result column="validation" property="validation" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, lesson_id, credential_id, create_time, update_time, validation
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from relation_lesson_credential
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from relation_lesson_credential
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zju.cst.simplefitserver.model.RelationLessonCredential" >
    insert into relation_lesson_credential (id, lesson_id, credential_id, 
      create_time, update_time, validation
      )
    values (#{id,jdbcType=INTEGER}, #{lessonId,jdbcType=INTEGER}, #{credentialId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, #{validation,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zju.cst.simplefitserver.model.RelationLessonCredential" >
    insert into relation_lesson_credential
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="lessonId != null" >
        lesson_id,
      </if>
      <if test="credentialId != null" >
        credential_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="validation != null" >
        validation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="lessonId != null" >
        #{lessonId,jdbcType=INTEGER},
      </if>
      <if test="credentialId != null" >
        #{credentialId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="validation != null" >
        #{validation,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zju.cst.simplefitserver.model.RelationLessonCredential" >
    update relation_lesson_credential
    <set >
      <if test="lessonId != null" >
        lesson_id = #{lessonId,jdbcType=INTEGER},
      </if>
      <if test="credentialId != null" >
        credential_id = #{credentialId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="validation != null" >
        validation = #{validation,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zju.cst.simplefitserver.model.RelationLessonCredential" >
    update relation_lesson_credential
    set lesson_id = #{lessonId,jdbcType=INTEGER},
      credential_id = #{credentialId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR},
      validation = #{validation,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>