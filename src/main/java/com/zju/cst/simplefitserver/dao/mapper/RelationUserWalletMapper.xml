<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zju.cst.simplefitserver.dao.mapper.RelationUserWalletMapper" >
  <resultMap id="BaseResultMap" type="com.zju.cst.simplefitserver.model.RelationUserWallet" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="buyer_id" property="buyerId" jdbcType="INTEGER" />
    <result column="wallet_id" property="walletId" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="INTEGER" />
    <result column="validation" property="validation" jdbcType="INTEGER" />
    <result column="spending" property="spending" jdbcType="INTEGER" />
    <result column="trainerLessonId" property="trainerLessonId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, buyer_id, wallet_id, money, create_time, update_time, validation, spending, trainer_lesson_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select *
    from relation_user_wallet
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from relation_user_wallet
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zju.cst.simplefitserver.model.RelationUserWallet" >
    insert into relation_user_wallet (id, buyer_id, wallet_id,
      money, create_time, update_time,
      validation, trainer_lesson_id)
    values (#{id,jdbcType=INTEGER}, #{buyerId,jdbcType=INTEGER}, #{walletId,jdbcType=INTEGER}, 
      #{money,jdbcType=INTEGER}, #{createTime,jdbcType=INTEGER}, #{updateTime,jdbcType=INTEGER}, 
      #{validation,jdbcType=INTEGER}), #{spending,jdbcType=INTEGER}), #{trainerLessonId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zju.cst.simplefitserver.model.RelationUserWallet" >
    insert into relation_user_wallet
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="buyerId != null" >
        buyer_id,
      </if>
      <if test="walletId != null" >
        wallet_id,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="validation != null" >
        validation,
      </if>
      <if test="spending != null" >
        spending,
      </if>
      <if test="trainerLessonId != null" >
        trainer_lesson_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="buyerId != null" >
        #{buyerId,jdbcType=INTEGER},
      </if>
      <if test="walletId != null" >
        #{walletId,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="validation != null" >
        #{validation,jdbcType=INTEGER},
      </if>
      <if test="spending != null" >
        #{spending,jdbcType=INTEGER},
      </if>
      <if test="trainerLessonId != null" >
        #{trainerLessonId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zju.cst.simplefitserver.model.RelationUserWallet" >
    update relation_user_wallet
    <set >
      <if test="buyerId != null" >
        buyer_id = #{buyerId,jdbcType=INTEGER},
      </if>
      <if test="walletId != null" >
        wallet_id = #{walletId,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="validation != null" >
        validation = #{validation,jdbcType=INTEGER},
      </if>
      <if test="spending != null" >
        spending = #{spending,jdbcType=INTEGER},
      </if>
      <if test="trainerLessonId != null" >
        trainer_lesson_id = #{trainerLessonId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zju.cst.simplefitserver.model.RelationUserWallet" >
    update relation_user_wallet
    set buyer_id = #{buyerId,jdbcType=INTEGER},
      wallet_id = #{walletId,jdbcType=INTEGER},
      money = #{money,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      validation = #{validation,jdbcType=INTEGER},
      spending = #{spending,jdbcType=INTEGER},
      trainer_lesson_id = #{trainerLessonId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--商家获取今日买卡数-->
  <select id="getCardNumToday" resultType="java.lang.Integer">
    select count(*)
    from relation_user_wallet uw
    where spending = 0
    and wallet_id = #{walletId, jdbcType=INTEGER}
    and create_time = #{createTime,jdbcType=INTEGER}
    union all
    select count(*)
    from relation_user_wallet uw, relation_trainer_lesson tl, info_shop, info_detail_seller ds
    where spending = 1
    and uw.create_time = #{createTime,jdbcType=INTEGER}
    and uw.trainer_lesson_id = tl.id
    and tl.shop_id = info_shop.id
    and info_shop.owner_id = ds.id
    and ds.user_id = #{walletId, jdbcType=INTEGER}
  </select>

  <!--商家获取今日买课数-->
  <select id="getLessonNumToday" resultType="java.lang.Integer">
    select count(*)
    from relation_user_wallet uw, relation_trainer_lesson tl, info_shop, info_detail_seller ds
    where spending = 1
    and uw.create_time = #{createTime,jdbcType=INTEGER}
    and uw.trainer_lesson_id = tl.id
    and tl.shop_id = info_shop.id
    and info_shop.owner_id = ds.id
    and ds.user_id = #{walletId, jdbcType=INTEGER}
  </select>

  <!--教练获取今日买卡数和买课数-->
  <select id="trainerGetCardNumToday" resultType="java.lang.Integer">
    select count(*)
    from relation_user_wallet uw, relation_trainer_lesson tl, info_shop, info_detail_trainer dt
    where spending = 0
    and tl.shop_id = info_shop.id
    and info_shop.owner_id = uw.wallet_id
    and tl.trainer_id = dt.id
    and uw.create_time = #{createTime,jdbcType=INTEGER}
    and dt.user_id = #{userId,jdbcType=INTEGER}
    union all
    select count(*)
    from relation_user_wallet uw, relation_trainer_lesson tl, info_detail_trainer dt
    where spending = 1
    and uw.trainer_lesson_id = tl.id
    and tl.trainer_id = dt.id
    and dt.user_id = #{userId,jdbcType=INTEGER}
    and uw.create_time = #{createTime,jdbcType=INTEGER}
  </select>
</mapper>