<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zju.cst.simplefitserver.dao.mapper.RelationTrainerCredentialMapper" >
  <resultMap id="BaseResultMap" type="com.zju.cst.simplefitserver.model.RelationTrainerCredential" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="trainer_id" property="trainerId" jdbcType="INTEGER" />
    <result column="credential_id" property="credentialId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="obtain_time" property="obtainTime" jdbcType="VARCHAR" />
    <result column="expire_time" property="expireTime" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
    <result column="validation" property="validation" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, trainer_id, credential_id, status, obtain_time, expire_time, create_time, update_time,
    validation
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from relation_trainer_credential
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from relation_trainer_credential
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zju.cst.simplefitserver.model.RelationTrainerCredential" >
    insert into relation_trainer_credential (id, trainer_id, credential_id,
      status, obtain_time, expire_time, 
      create_time, update_time, validation
      )
    values (#{id,jdbcType=INTEGER}, #{trainerId,jdbcType=INTEGER}, #{credentialId,jdbcType=INTEGER},
      #{status,jdbcType=INTEGER}, #{obtainTime,jdbcType=VARCHAR}, #{expireTime,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, #{validation,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zju.cst.simplefitserver.model.RelationTrainerCredential" >
    insert into relation_trainer_credential
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="trainerId != null" >
        trainer_id,
      </if>
      <if test="credentialId != null" >
        credential_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="obtainTime != null" >
        obtain_time,
      </if>
      <if test="expireTime != null" >
        expire_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="validation != null" >
        validation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="trainerId != null" >
        #{trainerId,jdbcType=INTEGER},
      </if>
      <if test="credentialId != null" >
        #{credentialId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="obtainTime != null" >
        #{obtainTime,jdbcType=VARCHAR},
      </if>
      <if test="expireTime != null" >
        #{expireTime,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="validation != null" >
        #{validation,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zju.cst.simplefitserver.model.RelationTrainerCredential" >
    update relation_trainer_credential
    <set >
      <if test="trainerId != null" >
        trainer_id = #{trainerId,jdbcType=INTEGER},
      </if>
      <if test="credentialId != null" >
        credential_id = #{credentialId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="obtainTime != null" >
        obtain_time = #{obtainTime,jdbcType=VARCHAR},
      </if>
      <if test="expireTime != null" >
        expire_time = #{expireTime,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="validation != null" >
        validation = #{validation,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zju.cst.simplefitserver.model.RelationTrainerCredential" >
    update relation_trainer_credential
    set trainer_id = #{trainerId,jdbcType=INTEGER},
      credential_id = #{credentialId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      obtain_time = #{obtainTime,jdbcType=VARCHAR},
      expire_time = #{expireTime,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR},
      validation = #{validation,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>